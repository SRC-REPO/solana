/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

import com.squareup.moshi.Moshi
import org.bitcoinj.core.Base58
import org.bouncycastle.crypto.params.Ed25519PrivateKeyParameters
import org.example.module.SolanaModule
import org.p2p.solanaj.core.Account
import org.p2p.solanaj.core.PublicKey
import org.p2p.solanaj.core.Transaction
import org.p2p.solanaj.programs.AssociatedTokenProgram
import org.p2p.solanaj.programs.Program
import org.p2p.solanaj.programs.SystemProgram
import org.p2p.solanaj.programs.TokenProgram
import org.p2p.solanaj.rpc.RpcClient
import org.p2p.solanaj.rpc.RpcException
import org.p2p.solanaj.rpc.types.RpcRequest
import org.web3j.crypto.MnemonicUtils
import java.math.BigDecimal

fun main() {
    println("qfqwfqwf")
    val rpcEndpoint = "https://api.devnet.solana.com"
    val publicKey = "8ixPw2F1J2g724nkYeZtg4fEFrWTRf2Tna965rbwsVoD"
    val userPublicKey = "CZtRsFZ9oRNjU1tiS5PrETT8aEQTVAnA4FKCRPVdWWJe"
    val noTokenUserPublicKey = "98HNCdVFAddLntayXeRz68JV49RX1TgqSRYT5mRf6QCu"
    val mint = "E3iTukHHrabJ1f3mW8rKRZV6Y4PKMzoLD1HmN8gNGpgt"
    val secretKey = "digital drink present man hamster leave orbit scorpion tackle cheese chat cabbage"
    val solanaService = SolanaModule()
    println(solanaService.getSolanaBalance(PublicKey("87j7biqJpvvUvgNqvZPXShDJ8md3yszBcuSCCBL9Vu9d")))
    //solanaService.solanaTransfer(secretKey,noTokenUserPublicKey,BigInteger.valueOf(2L));

    println(solanaService.getSolanaBalance(PublicKey(noTokenUserPublicKey)))


    solanaService.splTokenBalance(secretKey, noTokenUserPublicKey, mint)
    //solanaService.splTokenBalance(secretKey, userPublicKey, mint)

    //토큰 전송테스트
    //solanaService.splTokenTransfer(dto)

}

