/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.11.1/userguide/building_java_projects.html in the Gradle documentation.
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    alias(libs.plugins.kotlin.jvm)

    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation(libs.guava)
    //    implementation(kotlin("stdlib")) // Kotlin 표준 라이브러리
    // implementation("org.apache.commons:commons-text")
    // implementation("com.mmorrell:solanaj:1.19.2")
    implementation("org.bouncycastle:bcprov-jdk15on:1.70")
    implementation("com.ionspin.kotlin:bignum:0.3.10")
    implementation("org.web3j:core:4.9.8")
    implementation("com.mmorrell:solanaj:1.20.2")
	implementation("org.bitcoinj:bitcoinj-core:0.15.10")

}

testing {
    suites {
        // Configure the built-in test suite
        val test by getting(JvmTestSuite::class) {
            // Use JUnit Jupiter test framework
            useJUnitJupiter("5.10.3")
        }
    }
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = "org.example.AppKt"
}

tasks.withType<org.jetbrains.kotlin.gradle.tasks.KotlinCompile> {
    kotlinOptions {
        jvmTarget = "17" // JVM 버전 설정
        freeCompilerArgs += listOf("-Xdebug", "-Xno-optimize") // 디버깅 활성화, 최적화 비활성화
    }
}
tasks.withType<JavaExec> {
    jvmArgs = listOf("-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005")
}
tasks.register<JavaExec>("runDebug") {
    group = "application"
    mainClass.set("org.example.AppKt") // 메인 클래스
    classpath = sourceSets["main"].runtimeClasspath
    jvmArgs = listOf("-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005")
}